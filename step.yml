title: "Calabash Android UI Test"
summary: |-
  Runs Calabash Android UI tests.
description: |-
  [This Step](https://github.com/bitrise-steplib/steps-calabash-android-uitest) runs Calabash UI tests for the APK you define in the Step.

  Before you start:
  Running a Calabash Android UI test requires an Android emulator. To set up an Android emulator, follow these steps:
  1. Add the **Create Android Emulator** Step to your Workflow and configure the input fields.
  2. After the **Create Android Emulator** Step add the **Start Android Emulator** Step to run the created emulator.
  4. After the **Start Android Emulator** Step  add the **Calabash Android UI test** Step. Let's configure its input fields.

  ### Configuring the Step
  1. Add the path to the directory which contains your Calabash features directory in the **Directory of your calabash features** input.
  2. Add the Gemfile which contains calabash-android gem in the **Gemfile path**.
  3. Add the path to the APK in the **APK path** input. Please note that the APK must have Internet permission.
  4. Add **Additional options for `calabash-android run` call** if needed.
  5. Add the path to the **Android Home Directory**.
  6. Add the **calabash-android gem version**. If you specify a gem version in this input field, that particular version will be used. If you do not specify a gem version here, the gem version specified in the Gemfile (gem_file_path) will be used. If the Gemfile does not exist with calabash_android gem, then the latest gem version will be used.

  ### Useful links
  - [Testing with Bitrise](https://devcenter.bitrise.io/testing/testing-index/)

  ### Related Steps
  - [Android Lint](https://www.bitrise.io/integrations/steps/android-lint)
  - [Amazon Device Farm Runner](https://www.bitrise.io/integrations/steps/aws-device-farm-runner)
website: https://github.com/bitrise-steplib/steps-calabash-android-uitest
source_code_url: https://github.com/bitrise-steplib/steps-calabash-android-uitest
support_url: https://github.com/bitrise-steplib/steps-calabash-android-uitest/issues
host_os_tags:
  - osx-10.10
project_type_tags:
  - android
type_tags:
  - testing
is_requires_admin_user: true
is_always_run: false
is_skippable: false
deps:
  brew:
  - name: go
  apt_get:
  - name: golang
    bin_name: go
toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-calabash-android-uitest
inputs:
  - work_dir: 
    opts:
      title: "Directory of your calabash features"
      description: |-
        Path to the directory, which contains your calabash features directory.

        For example, if calabash features directory path is `CreditCardValidator.Droid/features`,  
        then work_dir should be: `CreditCardValidator.Droid`
      is_required: true
  - gem_file_path: $work_dir/Gemfile
    opts:
      title: "Gemfile path"
      description: |
        Path to the Gemfile which contains calabash-android gem.

        If Gemfile doesn't exist or doesn't contain calabash-android gem:

        - if `calabash_android_version` is not specified, then the latest version will be used.
  - apk_path: $BITRISE_APK_PATH
    opts:
      title: APK path
      description: |
        Path to the APK to test.

        __The APK should have Internet permission.__

        In the case of Xamarin:

        Use an APK, which isn't built using Shared mono runtime (Shared mono runtime is enabled by default in DEBUG builds).
      is_required: true
      is_expand: true
  - additional_options: --format html --out $BITRISE_DEPLOY_DIR/calabash-android_report.html
    opts:
      title: Additional options for `calabash-android run` call
      description: |
        Options added to the end of the `calabash-android run` call.
  - android_home: $ANDROID_HOME
    opts:
      title: Android Home Directory
      description: |
        Path to the Android Home Directory.
      is_required: true
      is_expand: true
  - calabash_android_version: 
    opts:
      title: "calabash-android gem version"
      description: |
        calabash-android gem version to use.

        __If this input specifies the gem version, this version will be used, even if `gem_file_path` is provided.__

        If `calabash_android_version` isn't specified:

        - gem version will be used specified by Gemfile at `gem_file_path`.
        - if Gemfile doesn't exist with calabash-android gem, then the latest version will be used.
outputs:
  - BITRISE_XAMARIN_TEST_RESULT:
    opts:
      title: Result of the tests. 'succeeded' or 'failed'.
      value_options:
        - succeeded
        - failed
